#include "measure.h"
#include "WateringSetup.h"

#include "Bitmaps.h"


#define RED2RED 0
#define GREEN2GREEN 1
#define BLUE2BLUE 2
#define BLUE2RED 3
#define GREEN2RED 4
#define RED2GREEN 5

extern WateringSetup setupState;

measure::measure(StateMachine * m, Adafruit_TFTLCD * tft1) :
State(m),
tft(tft1),
b1(5, 200, 60, 35, 18, false, 0, "Setup"),
bg1(tft1, 60, 20, 200),
bg2(tft1, 60, 60, 200),
bg3(tft1, 60, 100, 200)
	//b2( 100, 200, 50, 35 ,6)
{	
	b1.setDisplay(tft);
	b1.setHandler(this);
	b1.setColors(0xffff, 0x00ee);
	//b2.setHandler(this);
}

void measure::enter() {
	tft->fillRect(0, 0, 320, 240, tft->color565(100, 0, 100));
	tft->drawRoundRect(0, 0, 320, 240, 3, 0xfefe);
	b1.updateGraphic();
	tft->drawBitmap(20, 16, watercan, 32, 32,0);
	tft->drawBitmap(20, 56, watercan, 32, 32,0);
	tft->drawBitmap(20, 96, watercan, 32, 32,0);

	Serial.println("Measuring Mode");
	//b2.updateGraphic();
}

void measure::exit() {}

void measure::update(uint16_t x, uint16_t y, uint8_t z) {
	
//	b2.update(x, y, z);
	
	static uint8_t d = 0;
	static uint8_t c = 0;
	
	d++; 
	if (d >= 5) {
		d = 0;
		c++;
		c %= 100;
		tft->setTextSize(4);
		tft->setCursor(150, 150);
		tft->fillRect(150, 150, 60, 50, tft->color565(100, 0, 100));
		tft->print(c);

	}
	bg1.setValue(c, 40);
	bg2.setValue(c, 60);
	bg3.setValue(c, 200 - c);
	// Set the the position, gap between meters, and inner radius of the meters
	int xpos = 3, ypos = 5, gap = 4, radius = 50;
	// xpos = gap + ringMeter(d, 0, 255, xpos, ypos, radius, "mA", GREEN2RED); // Draw analogue meter

	b1.update(x, y, z);
}

void measure::callBack1(bool pressed, uint8_t) {
	//tft->fillRect(0, 0, 100, 100, 0xf0f0);
	if (pressed) {
		machine->TransitionTo(&setupState);
	}
}

int measure::ringMeter(int value, int vmin, int vmax, int x, int y, int r, char *units, byte scheme)
{
	// Minimum value of r is about 52 before value text intrudes on ring
	// drawing the text first is an option

	x += r; y += r;   // Calculate coords of centre of ring
	int  w = r / 4;    // Width of outer ring is 1/4 of radius  
	int  angle = 150;  // Half the sweep angle of meter (300 degrees)
	int  text_colour = 0; // To hold the text colour
	int  v = map(value, vmin, vmax, -angle, angle); // Map the value to an angle v
	byte seg = 5; // Segments are 5 degrees wide = 60 segments for 300 degrees
	byte inc = 5; // Draw segments every 5 degrees, increase to 10 for segmented ring

	// Draw colour blocks every inc degrees
	for (int i = -angle; i < angle; i += inc) {

		// Choose colour from scheme
		int colour = 0;
		switch (scheme) {
	/*	case 0: colour = ILI9341_RED; break; // Fixed colour
		case 1: colour = ILI9341_GREEN; break; // Fixed colour
		case 2: colour = ILI9341_BLUE; break; // Fixed colour */
		case 3: colour = rainbow(map(i, -angle, angle, 0, 127)); break; // Full spectrum blue to red
		case 4: colour = rainbow(map(i, -angle, angle, 63, 127)); break; // Green to red (high temperature etc)
		case 5: colour = rainbow(map(i, -angle, angle, 127, 63)); break; // Red to green (low battery etc)
		default: colour = 0x001f; break;     // Fix colour
		}

		// Calculate pair of coordinates for segment start
		float sx = cos((i - 90) * 0.0174532925);
		float sy = sin((i - 90) * 0.0174532925);
		uint16_t x0 = sx * (r - w) + x;
		uint16_t y0 = sy * (r - w) + y;
		uint16_t x1 = sx * r + x;
		uint16_t y1 = sy * r + y;

		// Calculate pair of coordinates for segment end
		float sx2 = cos((i + seg - 90) * 0.0174532925);
		float sy2 = sin((i + seg - 90) * 0.0174532925);
		int x2 = sx2 * (r - w) + x;
		int y2 = sy2 * (r - w) + y;
		int x3 = sx2 * r + x;
		int y3 = sy2 * r + y;

		if (i < v) { // Fill in coloured segments with 2 triangles
			tft->fillTriangle(x0, y0, x1, y1, x2, y2, colour);
			tft->fillTriangle(x1, y1, x2, y2, x3, y3, colour);
			text_colour = colour; // Save the last colour drawn
		}
		else // Fill in blank segments
		{
			tft->fillTriangle(x0, y0, x1, y1, x2, y2, 0x0005);
			tft->fillTriangle(x1, y1, x2, y2, x3, y3, 0x0005);
		}
	}

	// Convert value to a string
	char buf[10];
	byte len = 4; if (value > 999) len = 5;
	dtostrf(value, len, 0, buf);
	
	// Set the text colour to default
	//tft->setTextColor(ILI9341_WHITE, ILI9341_BLACK);
	// Uncomment next line to set the text colour to the last segment value!
	// tft.setTextColor(text_colour, ILI9341_BLACK);

	// Print value, if the meter is large then use big font 6, othewise use 4
	//if (r > 84) tft.drawCentreString(buf, x - 5, y - 20, 6); // Value in middle
	// else tft.drawCentreString(buf, x - 5, y - 20, 4); // Value in middle

	// Print units, if the meter is large then use big font 4, othewise use 2
	//tft.setTextColor(ILI9341_WHITE, ILI9341_BLACK);
	//if (r > 84) tft.drawCentreString(units, x, y + 30, 4); // Units display
	// else tft.drawCentreString(units, x, y + 5, 2); // Units display

	// Calculate and return right hand side x coordinate
	return x + r;
}

// #########################################################################
// Return a 16 bit rainbow colour
// #########################################################################
unsigned int measure::rainbow(uint8_t value)
{
	// Value is expected to be in range 0-127
	// The value is converted to a spectrum colour from 0 = blue through to 127 = red

	byte red = 0; // Red is the top 5 bits of a 16 bit colour value
	byte green = 0;// Green is the middle 6 bits
	byte blue = 0; // Blue is the bottom 5 bits

	byte quadrant = value / 32;

	if (quadrant == 0) {
		blue = 31;
		green = 2 * (value % 32);
		red = 0;
	}
	if (quadrant == 1) {
		blue = 31 - (value % 32);
		green = 63;
		red = 0;
	}
	if (quadrant == 2) {
		blue = 0;
		green = 63;
		red = value % 32;
	}
	if (quadrant == 3) {
		blue = 0;
		green = 63 - 2 * (value % 32);
		red = 31;
	}
	return (blue << 11) + (green << 5) + red;
}


#include <Arduino.h>

#define watercan_W 32 
#define watercan_H 32

const uint16_t watercan[] PROGMEM = {
	0x0000, 0x3479, 0x0b97, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0336, 0x0315, 0x0314, 0x0314, 0x0336, 0x0336, 0x0336, 0x0336, 0x0314, 0x23d7, 0x8579, 0x0000,/* line 01*/
	0x7dbb, 0x0316, 0x7e9d, 0x86be, 0x86be, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x869e, 0x6e1c, 0x0356, 0x2438,/* line 02*/
	0x0bb7, 0x0439, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x05fe, 0x0377, 0x2438,/* line 03*/
	0x03b7, 0x04bb, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x0397, 0x13f7,/* line 04*/
	0x0bb7, 0x0459, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x04ba, 0x765d, 0xffde, 0xffff, 0xffff, 0x04bb, 0x04ba, 0x04ba, 0x04ba, 0x0377, 0x1bf8,/* line 05*/
	0x0397, 0x0439, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x4d9c, 0x969d, 0x0499, 0x049a, 0x049a, 0xffff, 0x049a, 0x049a, 0x049a, 0x0377, 0x1bf8,/* line 06*/
	0x0397, 0x0439, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x047a, 0x0c9a, 0xf7ff, 0x047a, 0x049a, 0x047a, 0x047a, 0x5dbc, 0x0479, 0x047a, 0x047a, 0x0377, 0x13d7,/* line 07*/
	0x0397, 0x0418, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x1cba, 0xffff, 0xefbf, 0x0459, 0x0459, 0x0459, 0x0459, 0x2cfa, 0x2cfa, 0x0459, 0x0459, 0x0377, 0x13d7,/* line 08*/
	0x0397, 0x0418, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0439, 0x0439, 0x34fa, 0xffff, 0xffff, 0xffff, 0x0439, 0x0459, 0x0459, 0x0459, 0x65dc, 0x0459, 0x0459, 0x0459, 0x0397, 0x13f7,/* line 09*/
	0x0397, 0x03f8, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0439, 0x0419, 0xf7bf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0438, 0x0439, 0x0419, 0xefbe, 0x0439, 0x0439, 0x0439, 0x0377, 0x13d7,/* line 10*/
	0x0377, 0x03f8, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x1439, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7bf, 0x0418, 0x0418, 0xffff, 0x0418, 0x0418, 0x0418, 0x0397, 0x13d7,/* line 11*/
	0x0376, 0x03d8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0xaebd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x963c, 0x0419, 0xd75e, 0x03f8, 0x03f8, 0x03f8, 0x0397, 0x13d7,/* line 12*/
	0x0376, 0x03d7, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x03d8, 0x0bf8, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x34b9, 0x9e5c, 0x03d8, 0x03d8, 0x03d8, 0x0397, 0x13b7,/* line 13*/
	0x0376, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03d8, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcf3e, 0x03b7, 0x03b7, 0x03b7, 0x0397, 0x13b7,/* line 14*/
	0x0376, 0x0397, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x0397, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x0397, 0x03b8, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x03b7, 0x03b7, 0x03b7, 0x0397, 0x13b7,/* line 15*/
	0x0356, 0x0397, 0x0397, 0x0397, 0x0397, 0x0397, 0x03b7, 0xffff, 0x963c, 0x0397, 0x0397, 0x0397, 0x0397, 0x03b7, 0x0397, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbedd, 0x0397, 0x0397, 0x0397, 0x1397,/* line 16*/
	0x0356, 0x0397, 0x0397, 0x0397, 0x0397, 0x0397, 0x0bb7, 0xffff, 0xffff, 0xd75e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0397, 0x0397, 0x0397, 0x0397, 0x1397,/* line 17*/
	0x0356, 0x0397, 0x0397, 0x0397, 0x0397, 0x0397, 0x0bd7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0397, 0x0397, 0x0397, 0x0397, 0x0397, 0x1396,/* line 18*/
	0x0336, 0x0397, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0xffff, 0xefbf, 0x0397, 0x03b7, 0x2438, 0x4cfa, 0x7dbb, 0xae7c, 0xd75e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xae9c, 0x0397, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x1376,/* line 19*/
	0x0336, 0x03b7, 0x03b7, 0x03b7, 0x1c38, 0x0bb7, 0x03d8, 0xdf7e, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x23f8, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x03b8, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x1376,/* line 20*/
	0x0316, 0x03b7, 0x03b7, 0x03b7, 0xe79f, 0xe77e, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0xe79e, 0xffff, 0xffff, 0xd73e, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x1376,/* line 21*/
	0x0316, 0x03b7, 0x03b7, 0x03b7, 0xffff, 0xffff, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03d7, 0x965c, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x03b7, 0x1356,/* line 22*/
	0x0316, 0x0bd7, 0x0bd7, 0x0bd7, 0x3c99, 0x3c98, 0x13f8, 0x961c, 0x0bd8, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x1356,/* line 23*/
	0x02f5, 0x13d7, 0x13d7, 0x0bb7, 0x13d7, 0x13d7, 0xbefd, 0xffff, 0x13b7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x13d7, 0x1356,/* line 24*/
	0x02f5, 0x13d8, 0x0bd7, 0x2c58, 0x3c99, 0x13d7, 0xffff, 0xffff, 0x13b7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x0bd7, 0x1336,/* line 25*/
	0x02f5, 0x03f8, 0x03f8, 0xffdf, 0xefbf, 0x03f7, 0x553a, 0xdf5e, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x03f8, 0x1336,/* line 26*/
	0x02d5, 0x0418, 0x0418, 0xffff, 0xffff, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x0418, 0x1336,/* line 27*/
	0x02f5, 0x0459, 0x0459, 0x0c79, 0x0c9a, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x0459, 0x1336,/* line 28*/
	0x02d5, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x049a, 0x1315,/* line 29*/
	0x0ad5, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x04db, 0x5457,/* line 30*/
	0x0000, 0x02b4, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x053c, 0x02d3, 0x0000,/* line 31*/
	0x0000, 0x0000, 0x2b96, 0x02b3, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x0293, 0x6cf9, 0x0000, 0x0000/* line 32*/

};


const uint16_t Water[] PROGMEM = { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  1*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  2*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  3*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x2a94, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  4*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  5*/
0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0,/* line  6*/
0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0,/* line  7*/
0x0, 0x0, 0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0,/* line  8*/
0x0, 0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x0, 0x0,/* line  9*/
0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0,/* line 10*/
0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x0,/* line 11*/
0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x0,/* line 12*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59,/* line 13*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59,/* line 14*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x51d, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59,/* line 15*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x51d, 0x51d, 0x9edd, 0x9edd, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59,/* line 16*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x51d, 0x9edd, 0x9edd, 0xffff, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59,/* line 17*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x51d, 0x9edd, 0xffff, 0xffff, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x9edd, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59,/* line 18*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x51d, 0x9edd, 0xffff, 0xffff, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x9edd, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59,/* line 19*/
0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x51d, 0x9edd, 0x9edd, 0xffff, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x9edd, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59,/* line 20*/
0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0xf7ff, 0x3a59, 0x9edd, 0x9edd, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x9edd, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x0,/* line 21*/
0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x3a59, 0x9edd, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x0,/* line 22*/
0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0,/* line 23*/
0x0, 0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0x51d, 0xffff, 0x9edd, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x0, 0x0,/* line 24*/
0x0, 0x0, 0x0, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x9edd, 0x9edd, 0x51d, 0x51d, 0x51d, 0x51d, 0xff9f, 0x2ad1, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0,/* line 25*/
0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x9edd, 0x9edd, 0x2255, 0x2254, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0,/* line 26*/
0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0,/* line 27*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 28*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 29*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 30*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 31*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0/* line 32*/
};
const uint16_t Clock[] PROGMEM = { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  0*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  1*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e9c, 0x25ba, 0x6e7c, 0xffff, 0xffff, 0x563b, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x5e5c, 0xffff, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  2*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35db, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  3*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x4dda, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  4*/
0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, /* line  5*/
0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, /* line  6*/
0x0, 0x0, 0x8edd, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x1dba, 0xffff, 0x25ba, 0x0, 0x0, 0x0, /* line  7*/
0x0, 0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x3dfb, 0xffff, 0x25ba, 0x0, 0x0, /* line  8*/
0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x2ddb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0x6e7c, 0x0, 0x0, /* line  9*/
0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x563c, 0xffff, 0x25ba, 0x0, /* line 10*/
0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1dba, 0xffff, 0x25ba, 0x0, /* line 11*/
0x25ba, 0xffff, 0x563b, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x35db, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0x6e7c, 0x25ba, /* line 12*/
0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba, /* line 13*/
0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x2ddb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x563c, 0xffff, 0x25ba, /* line 14*/
0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x3dfb, 0xffff, 0x25ba, /* line 15*/
0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xf7df, 0xffff, 0x563b, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x4e1b, 0xffff, 0x25ba, /* line 16*/
0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x3e1b, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x665c, 0xffff, 0x25ba, /* line 17*/
0x25ba, 0xffff, 0x45fb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x2ddb, 0x25ba, 0x25ba, 0x86bd, 0xffff, 0xcf7e, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba, /* line 18*/
0x25ba, 0xffff, 0x6e7c, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1d79, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0x6e7c, 0x25ba, /* line 19*/
0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1d18, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x35fb, 0xffff, 0x25ba, 0x0, /* line 20*/
0x0, 0x25ba, 0xffff, 0x4e1b, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1cf7, 0xffff, 0xffff, 0x1dba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba, 0x0, /* line 21*/
0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1cf7, 0xffff, 0xffff, 0x1dba, 0x25ba, 0x25ba, 0x25ba, 0x1dba, 0xffff, 0x6e7c, 0x25ba, 0x0, /* line 22*/
0x0, 0x0, 0x25ba, 0xffff, 0x563c, 0x3dfb, 0x3dfb, 0x3dfb, 0x2ddb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1cf7, 0xffff, 0x5e3c, 0x25ba, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba, 0x0, 0x0, /* line 23*/
0x0, 0x0, 0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x5e5c, 0xffff, 0x25ba, 0x0, 0x0, 0x0, /* line 24*/
0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x35fb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x6e5c, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, /* line 25*/
0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x25bb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x5e3c, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, /* line 26*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x6e7c, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 27*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0xffff, 0xffff, 0x665c, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x1dba, 0x6e5c, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 28*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0xffff, 0xffff, 0x6e7c, 0x6e5c, 0x665c, 0x665c, 0x6e7c, 0x6e7c, 0xffff, 0xffff, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 29*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x6e7c, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 30*/
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};

const uint16_t TimeBan[] PROGMEM = {
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  1*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  2*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e9c, 0x25ba, 0x6e7c, 0xffff, 0xffff, 0x563b, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x5e5c, 0xffff, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  3*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35db, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  4*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x4dda, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0,/* line  5*/
	0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0,/* line  6*/
	0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0,/* line  7*/
	0x0, 0x0, 0x8edd, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x1dba, 0xffff, 0x25ba, 0x0, 0x0, 0x0,/* line  8*/
	0x0, 0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x3dfb, 0xffff, 0x25ba, 0x0, 0x0,/* line  9*/
	0x0, 0x25ba, 0x6e7c, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x2ddb, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0x6e7c, 0x0, 0x0,/* line 10*/
	0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x25ba, 0x25ba, 0x25ba, 0xffff, 0x25ba, 0x25ba, 0x25ba, 0x563c, 0xffff, 0x25ba, 0x0,/* line 11*/
	0x0, 0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3a59, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x35fb, 0x25ba, 0xffff, 0xffff, 0xffff, 0x25ba, 0xe8e4, 0x25ba, 0x1dba, 0xffff, 0x25ba, 0x0,/* line 12*/
	0x25ba, 0xffff, 0x563b, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x35db, 0x25ba, 0xffff, 0xffff, 0xffff, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0xffff, 0x6e7c, 0x25ba,/* line 13*/
	0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x3dfb, 0x25ba, 0xffff, 0xffff, 0xffff, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba,/* line 14*/
	0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0x3dfb, 0x2ddb, 0xffff, 0xffff, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x563c, 0xffff, 0x25ba,/* line 15*/
	0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3a59, 0x3a59, 0x3a59, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xffff, 0xffff, 0xffff, 0xffff, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x3dfb, 0xffff, 0x25ba,/* line 16*/
	0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x4e1b, 0xffff, 0x25ba,/* line 17*/
	0x25ba, 0xffff, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x665c, 0xffff, 0x25ba,/* line 18*/
	0x25ba, 0xffff, 0x45fb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba,/* line 19*/
	0x25ba, 0xffff, 0x6e7c, 0x3dfb, 0x3dfb, 0x3dfb, 0x3dfb, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0xffff, 0x6e7c, 0x25ba,/* line 20*/
	0x0, 0x25ba, 0xffff, 0x3dfb, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x35fb, 0xffff, 0x25ba, 0x0,/* line 21*/
	0x0, 0x25ba, 0xffff, 0x4e1b, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba, 0x0,/* line 22*/
	0x0, 0x25ba, 0x6e7c, 0xffff, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x1dba, 0xffff, 0x6e7c, 0x25ba, 0x0,/* line 23*/
	0x0, 0x0, 0x25ba, 0xffff, 0x563c, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x25ba, 0x0, 0x0,/* line 24*/
	0x0, 0x0, 0x0, 0x25ba, 0xffff, 0x3dfb, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x5e5c, 0xffff, 0x25ba, 0x0, 0x0, 0x0,/* line 25*/
	0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x35fb, 0x25ba, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x6e5c, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0,/* line 26*/
	0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x25bb, 0x25ba, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x5e3c, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0,/* line 27*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0x6e7c, 0x25ba, 0x25ba, 0x25ba, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 28*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0xffff, 0xffff, 0x665c, 0x25ba, 0x25ba, 0x25ba, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0x25ba, 0x1dba, 0x6e5c, 0xffff, 0xffff, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 29*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x6e7c, 0xffff, 0xffff, 0xffff, 0x6e7c, 0x6e5c, 0x665c, 0x665c, 0x6e7c, 0x6e7c, 0xffff, 0xffff, 0xffff, 0x6e7c, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 30*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x6e7c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x6e7c, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,/* line 31*/
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x25ba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0/* line 32*/
};
