#include <Arduino.h>

#include "TFTButton1.h"
#include "TFT.h"

extern const uint16_t Arrow[];

/**************************************************************************************************************/
Button1::Button1() {
	handler = 0;
}

/*Construct Button in x,y coordinate **************************************************************************/
Button1::Button1(uint16_t x0, uint16_t y0, uint16_t w0, uint16_t h0, uint8_t id, bool mirrored1, uint16_t color) :
Button(x0, y0, w0, h0, id, mirrored1, color)
{ };


//**************************************************************************************************************
void Button1::updateGraphic() {
	if (tft==0) return;
	if (pressed) {
		tft->drawBMP2( x1, y1, ( uint16_t * ) Arrow,22,32, mirrored, 0b0110000110001100, backColor);
	} else {
		tft->drawBMP2( x1, y1, ( uint16_t * ) Arrow,22,32, mirrored, 0 , backColor);
	}
}

const uint16_t Arrow[] PROGMEM = { 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  0*/
0x1b2, 0x1b2, 0x89, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  1*/
0x1b2, 0xefdf, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  2*/
0x1b2, 0xc75f, 0xcf7f, 0xdf9f, 0x1b2, 0x89, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  3*/
0x1b2, 0xc71e, 0xbefd, 0xbefe, 0x9579, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  4*/
0x1b2, 0xb6bd, 0xae9c, 0xae7c, 0xae7c, 0xae9c, 0xcf3e, 0x1b2, 0x89, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  5*/
0x1b2, 0xae9c, 0xae5c, 0xae5c, 0xae5b, 0xae5b, 0xae5b, 0xb6bd, 0x1b2, 0x89, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  6*/
0x1b2, 0xae5c, 0xa63b, 0xa61b, 0xa61b, 0xa61b, 0xa61b, 0xa61b, 0xbebc, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  7*/
0x1b2, 0xa61b, 0x9dda, 0x9dda, 0x9dda, 0x9dda, 0x9dda, 0x9dda, 0x9dba, 0x95ba, 0x9dda, 0x1b2, 0x89, 0x89, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  8*/
0x1b2, 0x9dfb, 0x95ba, 0x95ba, 0x95ba, 0x95ba, 0x95ba, 0x95ba, 0x9599, 0x9599, 0x9599, 0xa61a, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line  9*/
0x1b2, 0x95ba, 0x959a, 0x959a, 0x959a, 0x9599, 0x9599, 0x9599, 0x9579, 0x8d79, 0x8d79, 0x8d58, 0x9578, 0x9d99, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 10*/
0x1b2, 0x8d79, 0x8d79, 0x8d79, 0x8d59, 0x8d59, 0x8d59, 0x8d59, 0x8539, 0x8538, 0x8538, 0x8518, 0x84f7, 0x7cf7, 0x84f7, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 11*/
0x1b2, 0x8d59, 0x8d59, 0x8d59, 0x8d59, 0x8d59, 0x8d59, 0x8539, 0x8538, 0x8518, 0x8518, 0x7cf7, 0x7cd7, 0x7cd7, 0x74b6, 0x7496, 0x84f6, 0x1b2, 0x89, 0x0, 0x0, 0x0, /* line 12*/
0x1b2, 0x8539, 0x8539, 0x8539, 0x8539, 0x8539, 0x8539, 0x8539, 0x8518, 0x7cf8, 0x7cf8, 0x7cd7, 0x74b7, 0x74b6, 0x6c76, 0x6c75, 0x6c55, 0x6415, 0x1b2, 0x89, 0x0, 0x0, /* line 13*/
0x1b2, 0x8539, 0x8539, 0x8539, 0x8519, 0x8519, 0x7d19, 0x7d19, 0x7cf8, 0x7cd8, 0x7cd7, 0x7cd7, 0x7476, 0x6415, 0x2a70, 0x224f, 0x222e, 0x19ed, 0x19cd, 0x1b2, 0x1b2, 0x89, /* line 14*/
0x1b2, 0x8539, 0x8539, 0x8539, 0x8539, 0x8519, 0x8519, 0x7cf8, 0x7497, 0x6456, 0x5bf5, 0x3b33, 0x3b12, 0x3af2, 0x32b1, 0x2a90, 0x2a4f, 0x19ee, 0x19cd, 0x118c, 0x1a52, 0x1b2, /* line 15*/
0x1b2, 0x6c98, 0x6c78, 0x6c78, 0x6437, 0x5c17, 0x5bf6, 0x53f6, 0x53d6, 0x53b5, 0x4b95, 0x4374, 0x4333, 0x3b12, 0x32d1, 0x3290, 0x2a6f, 0x1a0e, 0x19cd, 0x19cc, 0x1b2, 0x0, /* line 16*/
0x1b2, 0x6458, 0x6458, 0x6458, 0x6457, 0x6437, 0x6437, 0x5c17, 0x5bf6, 0x53d6, 0x53b5, 0x4b74, 0x4353, 0x4333, 0x32d1, 0x3290, 0x2a6f, 0x19ed, 0x1b2, 0x1b2, 0x0, 0x0, /* line 17*/
0x1b2, 0x6c99, 0x6c99, 0x6c99, 0x6c98, 0x6c78, 0x6478, 0x6457, 0x5c17, 0x5c16, 0x53f6, 0x4b94, 0x4374, 0x4333, 0x32d1, 0x3290, 0x3af1, 0x1b2, 0x0, 0x0, 0x0, 0x0, /* line 18*/
0x1b2, 0x74b9, 0x74b9, 0x74b9, 0x6c99, 0x6c98, 0x6c78, 0x6458, 0x5c37, 0x5c17, 0x53f6, 0x4b95, 0x4b74, 0x4333, 0x3af2, 0x3b32, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 19*/
0x1b2, 0x74d9, 0x74d9, 0x74d9, 0x74b9, 0x6cb9, 0x6c98, 0x6c78, 0x6437, 0x5c17, 0x5bf6, 0x4bb5, 0x4b74, 0x4333, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 20*/
0x1b2, 0x853b, 0x7d1a, 0x7d1a, 0x74fa, 0x74d9, 0x74b9, 0x6c99, 0x6457, 0x5c37, 0x5bf6, 0x5c36, 0x3b51, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 21*/
0x1b2, 0x855c, 0x853b, 0x7d1b, 0x7cfa, 0x74da, 0x74b9, 0x6c99, 0x6457, 0x5c37, 0x5c17, 0x11ec, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 22*/
0x1b2, 0x8d7c, 0x855b, 0x853b, 0x7d1a, 0x7cfa, 0x74d9, 0x6cb9, 0x6458, 0x6cb9, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 23*/
0x1b2, 0x95bd, 0x8d7c, 0x8d5c, 0x853b, 0x7cfa, 0x74d9, 0x95bd, 0x95bd, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 24*/
0x1b2, 0x95dd, 0x8d9c, 0x8d7c, 0x851b, 0x7cfa, 0x95bd, 0x2b50, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 25*/
0x1b2, 0x9dfe, 0x959c, 0x8d7c, 0x855c, 0x95bd, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 26*/
0x1b2, 0x9ddd, 0x95bd, 0x6dfc, 0x95bd, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 27*/
0x1b2, 0x6e1c, 0x95bd, 0x95bd, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 28*/
0x1b2, 0x95bd, 0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 29*/
0x1b2, 0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, /* line 30*/
0x1b2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};
